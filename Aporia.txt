# Aporia

## Docs

- [Policies API](https://gr-docs.aporia.com/crud-operations/policy-catalog-and-custom-policies.md): This REST API documentation outlines methods for managing policies on the Aporia Policies Catalog. It includes detailed descriptions of endpoints for creating, updating, and deleting policies, complete with example requests and responses.
- [Projects API](https://gr-docs.aporia.com/crud-operations/projects-and-project-policies.md): This REST API documentation outlines methods for managing projects and policies on the Aporia platform. It includes detailed descriptions of endpoints for creating, updating, and deleting projects and their associated policies, complete with example requests and responses.
- [Directory sync](https://gr-docs.aporia.com/enterprise/directory-sync.md)
- [Multi-factor Authentication (MFA)](https://gr-docs.aporia.com/enterprise/multi-factor-authentication.md)
- [Security & Compliance](https://gr-docs.aporia.com/enterprise/security-and-compliance.md): Aporia uses and provides a variety of tools, frameworks, and features to ensure that your data is secure.
- [Self Hosting](https://gr-docs.aporia.com/enterprise/self-hosting.md): This document provides an overview of the Aporia platform architecture, design choices and security features that enable your team to securely add guardrails to their models without exposing any sensitive data.
- [Single sign-on (SSO)](https://gr-docs.aporia.com/enterprise/single-sign-on.md)
- [RAG Chatbot: Embedchain + Chainlit](https://gr-docs.aporia.com/examples/embedchain-chainlit.md): Learn how to build a streaming RAG chatbot with Embedchain, OpenAI, Chainlit for chat UI, and Aporia Guardrails.
- [Basic Example: Langchain + Gemini](https://gr-docs.aporia.com/examples/langchain-gemini.md): Learn how to build a basic application using Langchain, Google Gemini, and Aporia Guardrails.
- [Cloudflare AI Gateway](https://gr-docs.aporia.com/fundamentals/ai-gateways/cloudflare.md)
- [LiteLLM integration](https://gr-docs.aporia.com/fundamentals/ai-gateways/litellm.md)
- [Overview](https://gr-docs.aporia.com/fundamentals/ai-gateways/overview.md): By integrating Aporia with your AI Gateway, every new LLM-based application gets out-of-the-box guardrails. Teams can then add custom policies for their project.
- [Portkey integration](https://gr-docs.aporia.com/fundamentals/ai-gateways/portkey.md)
- [Customization](https://gr-docs.aporia.com/fundamentals/customization.md): Aporia Guardrails is highly customizable, and we continuously add more customization options. Learn how to customize guardrails for your needs.
- [Extractions](https://gr-docs.aporia.com/fundamentals/extractions.md): Extractions are specific parts of the prompt or response that you define, such as a **question**, **answer**, or **context**. These help Aporia know exactly what to check when running policies on your prompts or responses.
- [Overview](https://gr-docs.aporia.com/fundamentals/integration/integration-overview.md): This guide provides an overview and comparison between the different integration methods provided by Aporia Guardrails. 
- [OpenAI Proxy](https://gr-docs.aporia.com/fundamentals/integration/openai-proxy.md)
- [REST API](https://gr-docs.aporia.com/fundamentals/integration/rest-api.md)
- [Projects overview](https://gr-docs.aporia.com/fundamentals/projects.md): To integrate Aporia Guardrails, you need to create a Project, which groups the configurations of multiple policies. Learn how to set up projects with this guide.
- [Streaming support](https://gr-docs.aporia.com/fundamentals/streaming.md): Aporia Guardrails provides guardrails for both prompt-level and response-level streaming, which is critical for building reliable chatbot experiences.
- [Team Management](https://gr-docs.aporia.com/fundamentals/team-management.md): Learn how to manage team members on Aporia, and how to assign roles to each member with role-based access control (RBAC).
- [Introduction](https://gr-docs.aporia.com/get-started/introduction.md): Aporia Guardrails mitigates LLM hallucinations, inappropriate responses, prompt injection attacks, and other unintended behaviors in **real-time**. 
- [Quickstart](https://gr-docs.aporia.com/get-started/quickstart.md): Add Aporia Guardrails to your LLM-based app in under 5 minutes by following this quickstart tutorial.
- [Why Guardrails?](https://gr-docs.aporia.com/get-started/why-guardrails.md): Guardrails is a must-have for any enterprise-grade non-creative Generative AI app. Learn how Aporia can help you mitigate hallucinations and potential brand damage.
- [Dashboard](https://gr-docs.aporia.com/observability/dashboard.md): We are thrilled to introduce our new Dashboard! View **total sessions and detected prompts and responses violations** over time with enhanced filtering and sorting options. See which **policies** triggered violations and the **actions** taken by Aporia.
- [Dataset Upload](https://gr-docs.aporia.com/observability/dataset-upload.md): We are excited to announce the release of the **Dataset Upload** feature, allowing users to upload datasets directly to Aporia for review and analysis. Below are the key details and specifications for this feature.
- [Session Explorer](https://gr-docs.aporia.com/observability/session-explorer.md): We are excited to announce the launch of the Session Explorer, designed to provide **comprehensive visibility** into every interaction between **your users and your LLM**, which **policies triggered violations** and the **actions** taken by Aporia.
- [AGT Test](https://gr-docs.aporia.com/policies/agt-test.md): A dummy policy to help you test and verify that Guardrails are activated.
- [Allowed Topics](https://gr-docs.aporia.com/policies/allowed-topics.md): Checks user messages and assistant responses to ensure they adhere to specific and defined topics.
- [Competition Discussion](https://gr-docs.aporia.com/policies/competition.md): Detect user messages and assistant responses that contain reference to a competitor.
- [Cost Harvesting](https://gr-docs.aporia.com/policies/cost-harvesting.md): Detects and prevents misuse of an LLM to avoid unintended cost increases.
- [Custom Policy](https://gr-docs.aporia.com/policies/custom-policy.md): Build your own custom policy by writing a prompt.
- [Denial of Service](https://gr-docs.aporia.com/policies/denial-of-service.md): Detects and mitigates denial of service (DOS) attacks on an LLM by limiting excessive requests per minute from the same IP.
- [Language Mismatch](https://gr-docs.aporia.com/policies/language-mismatch.md): Detects when an LLM is answering a user question in a different language.
- [PII](https://gr-docs.aporia.com/policies/pii.md): Detects the existence of Personally Identifiable Information (PII) in user messages or assistant responses, based on the configured sensitive data types.
- [Prompt Injection](https://gr-docs.aporia.com/policies/prompt-injection.md): Detects any user attempt of prompt injection or jailbreak.
- [Rag Access Control](https://gr-docs.aporia.com/policies/rag-access-control.md): ensures that users can only access documents they are authorized to, based on their role.
- [RAG Hallucination](https://gr-docs.aporia.com/policies/rag-hallucination.md): Detects any response that carries a high risk of hallucinations due to inability to deduce the answer from the provided context. Useful for maintaining the integrity and factual correctness of the information when you only want to use knowledge from your RAG.
- [Restricted Phrases](https://gr-docs.aporia.com/policies/restricted-phrases.md): Ensures that the LLM does not use specified prohibited terms and phrases.
- [Restricted Topics](https://gr-docs.aporia.com/policies/restricted-topics.md): Detects any user message or assistant response that contains discussion on one of the restricted topics mentioned in the policy.
- [Allowed Tables](https://gr-docs.aporia.com/policies/sql-allowed-tables.md)
- [Load Limit](https://gr-docs.aporia.com/policies/sql-load-limit.md)
- [Read-Only Access](https://gr-docs.aporia.com/policies/sql-read-only-access.md)
- [Restricted Tables](https://gr-docs.aporia.com/policies/sql-restricted-tables.md)
- [Overview](https://gr-docs.aporia.com/policies/sql-security.md)
- [Task Adherence](https://gr-docs.aporia.com/policies/task-adherence.md): Ensures that user messages and assistant responses strictly follow the specified tasks and objectives outlined in the policy.
- [Tool Parameter Correctness](https://gr-docs.aporia.com/policies/tool-parameter-correctness.md): Ensures that the parameters used by LLM tools are accurately derived from the relevant context within the chat history, promoting consistency and correctness in tool usage.
- [Toxicity](https://gr-docs.aporia.com/policies/toxicity.md): Detect user messages and assistant responses that contain toxic content.
- [September 3rd 2024](https://gr-docs.aporia.com/release-notes/release-notes-03-09-2024.md): We are delighted to introduce our **latest features and fixes from the recent period**, enhancing your experience with improved functionality and performance.
- [September 19th 2024](https://gr-docs.aporia.com/release-notes/release-notes-19-09-2024.md): We are delighted to introduce our **latest features from the recent period**, enhancing your experience with improved functionality and performance.
- [August 20th 2024](https://gr-docs.aporia.com/release-notes/release-notes-20-08-2024.md): We are delighted to introduce our **latest features and fixes from the recent period**, enhancing your experience with improved functionality and performance.
- [August 6th 2024](https://gr-docs.aporia.com/release-notes/release-notes-28-07-2024.md): We are delighted to introduce our **latest features and fixes from the recent period**, enhancing your experience with improved functionality and performance.
- [February 1st 2024](https://gr-docs.aporia.com/release-notes/rn-01-02-2024.md): We’re thrilled to officially announce Aporia Guardrails, our breakthrough solution designed to protect your LLM applications from unintended behavior, hallucinations, prompt injection attacks, and more.
- [March 1st 2024](https://gr-docs.aporia.com/release-notes/rn-01-03-2024.md): We are delighted to introduce our **latest features and fixes from the recent period**, enhancing your experience with improved functionality and performance.
- [April 1st 2024](https://gr-docs.aporia.com/release-notes/rn-01-04-2024.md): We are delighted to introduce our **latest features and fixes from the recent period**, enhancing your experience with improved functionality and performance.
- [May 1st 2024](https://gr-docs.aporia.com/release-notes/rn-01-05-2024.md): We are delighted to introduce our **latest features and fixes from the recent period**, enhancing your experience with improved functionality and performance.
- [June 1st 2024](https://gr-docs.aporia.com/release-notes/rn-01-06-2024.md): We are delighted to introduce our **latest features and fixes from the recent period**, enhancing your experience with improved functionality and performance.
- [July 17th 2024](https://gr-docs.aporia.com/release-notes/rn-21-07-2024.md): We are delighted to introduce our **latest features and fixes from the recent period**, enhancing your experience with improved functionality and performance.
- [December 1st 2024](https://gr-docs.aporia.com/release-notes/rn-28-11-2024.md): We are delighted to introduce our **latest features and fixes from the recent period**, enhancing your experience with improved functionality and performance.
- [October 31st 2024](https://gr-docs.aporia.com/release-notes/rn-31-10-2024.md): We are delighted to introduce our **latest features and fixes from the recent period**, enhancing your experience with improved functionality and performance.


## Optional

- [Guardrails Dashboard](https://guardrails.aporia.com/)
- [GenAI Academy](https://www.aporia.com/learn/generative-ai/)
- [ML Observability Docs](https://docs.aporia.com)
- [Blog](https://www.aporia.com/blog/)
